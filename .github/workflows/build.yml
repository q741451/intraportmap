name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: ['amd64', 'i386']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.architecture }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          sudo apt-get install -y libevent-dev
          ./autogen.sh
          ./configure
          make
          cp src/intraportmap intraportmap
          strip intraportmap
          tar -zcf intraportmap-${{ matrix.architecture }}.tar.gz intraportmap 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: intraportmap-${{ matrix.architecture }}
          path: intraportmap-${{ matrix.architecture }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in ./artifacts/intraportmap-*/*; do
            if [ -f "$file" ]; then
              echo "Uploading asset: $file"
              gh release upload ${{ steps.create_release.outputs.tag_name }} "$file" --clobber --repo q741451/intraportmap
            fi
          done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


