name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      log_level:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: ['amd64']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.architecture }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          sudo apt-get install -y libevent-dev
          ./autogen.sh
          ./configure --enable-static
          make
          cp src/intraportmap intraportmap
          strip intraportmap
          tar -zcf intraportmap-linux-${{ matrix.architecture }}.tar.gz intraportmap 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: intraportmap-${{ matrix.architecture }}
          path: intraportmap-linux-${{ matrix.architecture }}.tar.gz
          
  build-macos-arm64:
    name: Build macOS arm64
    runs-on: macos-14
    strategy:
      matrix:
        architecture: ['aarch64']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          brew install autoconf
          brew install wget
          wget https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz
          tar -zxf libevent-2.1.12-stable.tar.gz
          cd libevent-2.1.12-stable/
          ./configure --prefix=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/${{ matrix.architecture }} --enable-static --disable-shared --disable-openssl
          make
          make install
          cd ..
          ./autogen.sh
          ./configure --with-event=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/${{ matrix.architecture }} --enable-static
          make
          cp src/intraportmap intraportmap
          strip intraportmap
          tar -zcf intraportmap-macos-${{ matrix.architecture }}.tar.gz intraportmap 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: intraportmap-${{ matrix.architecture }}
          path: intraportmap-macos-${{ matrix.architecture }}.tar.gz
          
  build-docker-cross:
    name: Build linux
    runs-on: ubuntu-20.04
    container: "abcfy2/muslcc-toolchain-ubuntu:${{ matrix.cross_host }}"
    strategy:
      matrix:
        cross_host: ['arm-linux-musleabi', 'aarch64-linux-musl', 'mips-linux-musl', 'mipsel-linux-musl', 'mips64-linux-musl', 'x86_64-linux-musl', 'i686-linux-musl']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          apt-get update
          apt-get install -y autoconf
          apt-get install -y wget
          apt-get install -y make
          wget https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz
          tar -zxf libevent-2.1.12-stable.tar.gz
          cd libevent-2.1.12-stable/
          ./configure --prefix=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/${{ matrix.cross_host }} --host=${{ matrix.cross_host }} --enable-static --disable-shared --disable-openssl
          make
          make install
          cd ..
          ./autogen.sh
          ./configure --with-event=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/${{ matrix.cross_host }} --enable-static --host=${{ matrix.cross_host }}
          make
          cp src/intraportmap intraportmap
          ${{ matrix.cross_host }}-strip intraportmap
          tar -zcf intraportmap-${{ matrix.cross_host }}.tar.gz intraportmap 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: intraportmap-${{ matrix.cross_host }}
          path: intraportmap-${{ matrix.cross_host }}.tar.gz

  build-win:
    name: Build Windows
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: ['x86_64', 'i686']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          sudo apt-get install -y wget
          sudo apt-get install -y zip
          sudo apt-get install -y mingw-w64
          wget https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz
          tar -zxf libevent-2.1.12-stable.tar.gz
          cd libevent-2.1.12-stable/
          ./configure --prefix=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/windows-${{ matrix.architecture }} --host=${{ matrix.architecture }}-w64-mingw32 --enable-static --disable-shared --disable-openssl
          make
          make install
          cd ..
          ./autogen.sh
          ./configure LIBS="-lws2_32 -liphlpapi" --with-event=${{ github.workspace }}/libevent-2.1.12-stable/install-bin/windows-${{ matrix.architecture }} --enable-static --host=${{ matrix.architecture }}-w64-mingw32
          make
          cp src/intraportmap.exe intraportmap.exe
          ${{ matrix.architecture }}-w64-mingw32-strip intraportmap.exe
          zip intraportmap-windows-${{ matrix.architecture }}.zip intraportmap.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: intraportmap-${{ matrix.architecture }}
          path: intraportmap-windows-${{ matrix.architecture }}.zip

  release:
    needs: [build, build-docker-cross, build-win, build-macos-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in ./artifacts/intraportmap-*/*; do
            if [ -f "$file" ]; then
              asset_name=$(basename $file)
              echo "Uploading asset: $asset_name"
              gh release upload ${GITHUB_REF#refs/tags/} "$file" --repo ${{ github.repository }}
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
